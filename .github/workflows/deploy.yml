name: CI/CD to EC2

on:
    push:
        branches: ['dev']
    pull_request:
        branches: ['dev']

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            # 1. 리포지토리 체크아웃
            - name: Checkout repository
              uses: actions/checkout@v4

            # 2. pnpm 설치
            - name: Set up pnpm
              run: npm install -g pnpm

            # 3. Node.js 환경 설정
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.x'

            # 4. .env 파일 생성
            - name: Create .env file
              run: |
                  echo "NEXT_PUBLIC_SERVER_DEV_URL=${{ secrets.NEXT_PUBLIC_SERVER_DEV_URL }}" >> .env
                  echo "NEXT_PUBLIC_LOCAL_DEV_URL=${{ secrets.NEXT_PUBLIC_LOCAL_DEV_URL }}" >> .env
                  echo "NEXT_PUBLIC_GOOGLE_ANALYTICS=${{ secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS }}" >> .env
                  echo "NEXT_PUBLIC_KAKAO_API_KEY=${{ secrets.NEXT_PUBLIC_KAKAO_API_KEY }}" >> .env

            # 5. 의존성 설치 & 빌드
            - name: Install dependencies & Build
              run: |
                  pnpm install
                  pnpm build

            # 6. SSH 키 설정 및 연결 테스트
            - name: Configure SSH Key & Test Connection
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
                  echo "" >> ~/.ssh/id_rsa  # 개행 추가
                  chmod 600 ~/.ssh/id_rsa

                  # SSH 키 정상 저장 확인 (비밀키는 노출되지 않도록 주의)
                  ssh-keygen -l -f ~/.ssh/id_rsa || (echo "SSH Key Error: Invalid Key Format" && exit 1)

                  # SSH 접속 테스트
                  ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} "echo 'SSH 연결 성공!'"

            # 7. EC2로 배포
            - name: Deploy to EC2
              run: |
                  ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
                    cd ~/eye-on-frontend
                    pnpm install
                    pnpm run build
                    pm2 restart "eye on frontend" || pm2 start pnpm --name "eye on frontend" -- run start
                  EOF
